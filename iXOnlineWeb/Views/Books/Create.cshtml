@model iXOnlineWeb.Data.DataAccess.Book


&nbsp;&nbsp;&nbsp;<a href="@Url.Action("Index","Books")" class="btn btn-outline-primary"><< Back</a>
<br />
<br />
<br />

<div class="align-self-lg-center">
    <div class="col-sm-8">
        <div class="card">
            <div class="card-header">
                Post Book Details
            </div>
            <div class="card-body">
             
                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BookTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BookDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.BookDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BookDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Edition, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Edition, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Edition, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <button type="button" class="btn btn-success" onclick="PostBook()">Save</button>
                            </div>
                        </div>
                    </div>
                


            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function PostBook() {
            var count = 0;
            if ($('#BookTitle').val() == '') {
                toastr.error('Please enter book title');
                count++;
            }
            if ($('#ISBN').val() == '') {
                toastr.error('Please enter an ISBN Number');
                count++;
            }
            if ($('#Author').val() == '') {
                toastr.error('Please enter an Author');
                count++;
            }
            if ($('#BookDescription').val() == '') {
                toastr.error('Please enter a book description');
                count++;
            }
            if ($('#Language').val() == '') {
                toastr.error('Please enter a Language');
                count++;
            }
            if ($('#Edition').val() == '') {
                toastr.error('Please enter a book edition');
                count++;
            }
           
            if (count == 0) {

                $.ajax({
                    type: 'Post',
                    dataType: 'Json',
                    data: {
                        BookTitle: $('#BookTitle').val(),
                        ISBN: $('#ISBN').val(),
                        Author: $('#Author').val(),
                        BookDescription: $('#BookDescription').val(),
                        Language: $('#Language').val(),
                        PublishedDate: $('#PublishedDate').val(),
                        DaysAvailable: $('#DaysAvailable').val(),
                        Edition: $('#Edition').val(),
                        MemberId: $('#MemberId').val(),
                        IsBookActive: $('#IsBookActive').val()
                    },
                    url: '/Books/PostBook',
                    success: function (data) {
                        if (data.Result == "Success") {
                            document.location.reload(true);
                            toastr.success('Book has succesfully been posted');
                            Window.location.href('/Books/Index')
                        }
                        else {

                            alert('Error' + data.Message);
                        }
                    },
                    error: function (data) {
                        alert('Error' + data.Message);
                    }
                });
            }
        }
    </script>
}
