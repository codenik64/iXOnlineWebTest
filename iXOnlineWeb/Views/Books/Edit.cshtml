@model iXOnlineWeb.Data.DataAccess.Book


&nbsp;&nbsp;&nbsp;<a href="@Url.Action("Index","Books")" class="btn btn-outline-primary"><< Back</a>
<br />
<br />
<br />


    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BookId)

        <div class="form-group">
            @Html.LabelFor(model => model.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div hidden class="form-group">
            @Html.LabelFor(model => model.PublishedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublishedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div hidden="form-group">
            @Html.LabelFor(model => model.DaysAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DaysAvailable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DaysAvailable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div hidden class="form-group">
            @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div hidden class="form-group">
            @Html.LabelFor(model => model.IsBookActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsBookActive)
                    @Html.ValidationMessageFor(model => model.IsBookActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-success" onclick="UpdateBook()">Update</button>
            </div>
        </div>
    </div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function UpdateBook() {
            $.ajax({
                type: 'Post',
                dataType: 'Json',
                data: {
                    BookId: $('#BookId').val(),
                    BookTitle: $('#BookTitle').val(),
                    ISBN: $('#ISBN').val(),
                    Author: $('#Author').val(),
                    BookDescription: $('#BookDescription').val(),
                    Language: $('#Language').val(),
                    PublishedDate: $('#PublishedDate').val(),
                    DaysAvailable: $('#DaysAvailable').val(),
                    Edition: $('#Edition').val(),
                    MemberId: $('#MemberId').val(),
                    IsBookActive: $('#IsBookActive').val()
                },
                url: '/Books/UpdateBook',
                success: function (data) {
                    if (data.Result == "Success")
                    {
                        document.location.reload(true);
                        alert('Book Has been updated');
                        Window.location.href('/Books/Index')
                    }
                    else
                    {

                        alert('Error' + data.Message);
                    }
                },
                error: function (data) {
                    alert('Error' + data.Message);
                }
            });
    }
    </script>
}
